# Generated by go2rpm 1
%bcond_without check

# https://github.com/golang/xerrors
%global goipath         golang.org/x/xerrors
%global forgeurl        https://github.com/golang/xerrors
# %global commit          a985d3407aa71f30cf86696ee0a2f409709f22e1

%global provider        github
%global provider_tld    com
%global project         golang
%global repo            xerrors
# https://github.com/golang/sys
%global provider_prefix %{provider}.%{provider_tld}/%{project}/%{repo}
%global import_path     golang.org/x/xerrors
%global commit          a985d3407aa71f30cf86696ee0a2f409709f22e1
%global shortcommit     %(c=%{commit}; echo ${c:0:7})

%global common_description %{expand:
This package holds the transition packages for the new Go 1.13 error values.
See golang.org/design/29934-error-values.}

Name:           golang-x-xerrors
Version:        0
Release:        0.1%{?dist}
Summary:        Transition packages for the new Go 1.13 error values

# Upstream license specification: BSD-3-Clause
License:        BSD
URL:            https://%{provider_prefix}
Source0:        https://%{provider_prefix}/archive/%{commit}/%{repo}-%{commit}.tar.gz

%description
%{common_description}

%package devel
Summary:       %{summary}
BuildArch:     noarch

%description devel
%{common_description}

This package contains library source intended for
building other packages which use import path with
%{goipath} prefix.

%prep
%%setup -q -n %{repo}-%{commit}

%install
# source codes for building projects
install -d -p %{buildroot}/%{gopath}/src/%{import_path}/
echo "%%dir %%{gopath}/src/%%{import_path}/." >> devel.file-list
# find all *.s and generate devel.file-list
for file in $(find . -iname "*.s") ; do
    echo "%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)" >> devel.file-list
    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)
    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file
    echo "%%{gopath}/src/%%{import_path}/$file" >> devel.file-list
done
# find all *.c and generate devel.file-list
for file in $(find . -iname "*.c") ; do
    echo "%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)" >> devel.file-list
    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)
    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file
    echo "%%{gopath}/src/%%{import_path}/$file" >> devel.file-list
done
# find all *.go but no *_test.go files and generate devel.file-list
for file in $(find . -iname "*.go" \! -iname "*_test.go") ; do
    echo "%%dir %%{gopath}/src/%%{import_path}/$(dirname $file)" >> devel.file-list
    install -d -p %{buildroot}/%{gopath}/src/%{import_path}/$(dirname $file)
    cp -pav $file %{buildroot}/%{gopath}/src/%{import_path}/$file
    echo "%%{gopath}/src/%%{import_path}/$file" >> devel.file-list
done

sort -u -o devel.file-list devel.file-list

%if %{with check}
%check
%endif

%files devel -f devel.file-list
%license PATENTS LICENSE
%doc README

%changelog
* Mon Oct 21 13:57:20 UTC 2019 Maciek Borzecki <maciek.borzecki@gmail.com> - 0-0.1.20190917gita985d34
- Initial package
